<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-03-31T15:24:15+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">乱七八糟一堆事</title><subtitle>Your Site Description
</subtitle><author><name>盗亦有道</name></author><entry><title type="html">博客github上线折腾流程记录</title><link href="http://localhost:4000/2020/03/31/%E5%8D%9A%E5%AE%A2%E4%B8%8A%E7%BA%BF%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95.html" rel="alternate" type="text/html" title="博客github上线折腾流程记录" /><published>2020-03-31T00:00:00+08:00</published><updated>2020-03-31T00:00:00+08:00</updated><id>http://localhost:4000/2020/03/31/%E5%8D%9A%E5%AE%A2%E4%B8%8A%E7%BA%BF%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95</id><content type="html" xml:base="http://localhost:4000/2020/03/31/%E5%8D%9A%E5%AE%A2%E4%B8%8A%E7%BA%BF%E6%B5%81%E7%A8%8B%E8%AE%B0%E5%BD%95.html">&lt;h3 id=&quot;记录博客在github上线的全部折腾流程&quot;&gt;记录博客在github上线的全部折腾流程&lt;/h3&gt;

&lt;h4 id=&quot;本地安装jekyll&quot;&gt;本地安装jekyll&lt;/h4&gt;
&lt;p&gt;主要参考&lt;a href=&quot;http://jekyll.com.cn/&quot;&gt;Jekyll&lt;/a&gt;的官网。&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;按照教程，应该先安装Ruby环境，但是我的系统是mac os 10.15.3，已经默认集成了Ruby环境。安装命令：&lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;brew install ruby&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;安装 Jekyll 和 bundler gems。&lt;code class=&quot;highlighter-rouge&quot;&gt;gem install jekyll bundler&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;在自己喜欢的位置，创建一个全新的 Jekyll 网站.&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll new myblog&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;进入新创建的目录。&lt;code class=&quot;highlighter-rouge&quot;&gt;cd myblog&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;构建网站并启动一个本地服务器。&lt;code class=&quot;highlighter-rouge&quot;&gt;bundle exec jekyll serve&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;在浏览器中打开 &lt;code class=&quot;highlighter-rouge&quot;&gt;http://localhost:4000&lt;/code&gt; 网址&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;本地安装git&quot;&gt;本地安装git&lt;/h4&gt;
&lt;p&gt;通过homebrew安装Git。&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;未安装homebrew，需安装homebrew。&lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;安装git。&lt;code class=&quot;highlighter-rouge&quot;&gt;brew install git&lt;/code&gt;
    &lt;h4 id=&quot;github上建一个博客空间&quot;&gt;github上建一个博客空间&lt;/h4&gt;
    &lt;p&gt;github上自己注册创建。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;创建ssh-key配置git&quot;&gt;创建ssh key、配置git&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;设置username和email（github每次commit都会记录他们）&lt;code class=&quot;highlighter-rouge&quot;&gt;git config --global user.name &quot;wenbo&quot;&lt;/code&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;git config --global user.email &quot;1050794513@qq.com&quot;&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;通过终端命令创建ssh key.&lt;code class=&quot;highlighter-rouge&quot;&gt;ssh-keygen -t rsa -C &quot;283587493@qq.com&quot;&lt;/code&gt;。期间会让输入私钥密码啥的，要记牢。公钥最好用默认路径，否则可能导致后边无法与git通讯，还要调路径，麻烦。&lt;/li&gt;
  &lt;li&gt;终端查看.ssh/id_rsa.pub文件.&lt;code class=&quot;highlighter-rouge&quot;&gt;open .ssh/id_rsa.pub &lt;/code&gt;回车后，就会新弹出一个终端，然后复制里面的key（所有文字）。或者用cat命令查看&lt;code class=&quot;highlighter-rouge&quot;&gt;cat .ssh/id_rsa.pub&lt;/code&gt;。&lt;/li&gt;
  &lt;li&gt;登录GitHub（默认你已经注册了GitHub账号），添加ssh key，点击Settings-&amp;gt;New ssh key。&lt;/li&gt;
  &lt;li&gt;链接验证。&lt;code class=&quot;highlighter-rouge&quot;&gt;ssh -T git@github.com &lt;/code&gt;如果成功，会出现类似结果。&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fanshilin@fanshilindeiMac ~ % ssh -T git@github.com 
Enter passphrase for key '/Users/fanshilin/.ssh/id_rsa': 
Hi fanshilin! You've successfully authenticated, but GitHub does not provide shell access.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;提交本地项目到github&quot;&gt;提交本地项目到GitHub&lt;/h4&gt;
&lt;ol&gt;
  &lt;li&gt;Clone工程到本地，首先复制ssh 地址。&lt;code class=&quot;highlighter-rouge&quot;&gt;cd /Users/fanshilin&lt;/code&gt;，&lt;code class=&quot;highlighter-rouge&quot;&gt;git clone git@github.com:fanshilin/blog.git&lt;/code&gt;。其中&lt;code class=&quot;highlighter-rouge&quot;&gt;git@github.com:fanshilin/blog.git&lt;/code&gt;是刚才复制的ssh地址。&lt;/li&gt;
  &lt;li&gt;提交修改，首先切换到LearnGit文件路径：&lt;code class=&quot;highlighter-rouge&quot;&gt;cd /Users/fanshilin/blog&lt;/code&gt;，然后输入：&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//文件添加到仓库（.代表提交所有文件）
git add .
//把文件提交到仓库
git commit -m &quot;First Commit&quot;
//上传到github
git push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>盗亦有道</name></author><category term="博客" /><category term="折腾" /><category term="教程" /><summary type="html">记录博客在github上线的全部折腾流程 本地安装jekyll 主要参考Jekyll的官网。 按照教程，应该先安装Ruby环境，但是我的系统是mac os 10.15.3，已经默认集成了Ruby环境。安装命令：/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;，brew install ruby 安装 Jekyll 和 bundler gems。gem install jekyll bundler 在自己喜欢的位置，创建一个全新的 Jekyll 网站.jekyll new myblog 进入新创建的目录。cd myblog 构建网站并启动一个本地服务器。bundle exec jekyll serve 在浏览器中打开 http://localhost:4000 网址 本地安装git 通过homebrew安装Git。 未安装homebrew，需安装homebrew。/usr/bin/ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot; 安装git。brew install git github上建一个博客空间 github上自己注册创建。 创建ssh key、配置git 设置username和email（github每次commit都会记录他们）git config --global user.name &quot;wenbo&quot;git config --global user.email &quot;1050794513@qq.com&quot; 通过终端命令创建ssh key.ssh-keygen -t rsa -C &quot;283587493@qq.com&quot;。期间会让输入私钥密码啥的，要记牢。公钥最好用默认路径，否则可能导致后边无法与git通讯，还要调路径，麻烦。 终端查看.ssh/id_rsa.pub文件.open .ssh/id_rsa.pub 回车后，就会新弹出一个终端，然后复制里面的key（所有文字）。或者用cat命令查看cat .ssh/id_rsa.pub。 登录GitHub（默认你已经注册了GitHub账号），添加ssh key，点击Settings-&amp;gt;New ssh key。 链接验证。ssh -T git@github.com 如果成功，会出现类似结果。 fanshilin@fanshilindeiMac ~ % ssh -T git@github.com Enter passphrase for key '/Users/fanshilin/.ssh/id_rsa': Hi fanshilin! You've successfully authenticated, but GitHub does not provide shell access. 提交本地项目到GitHub Clone工程到本地，首先复制ssh 地址。cd /Users/fanshilin，git clone git@github.com:fanshilin/blog.git。其中git@github.com:fanshilin/blog.git是刚才复制的ssh地址。 提交修改，首先切换到LearnGit文件路径：cd /Users/fanshilin/blog，然后输入： //文件添加到仓库（.代表提交所有文件） git add . //把文件提交到仓库 git commit -m &quot;First Commit&quot; //上传到github git push</summary></entry><entry><title type="html">Mac OS 10.15.3 无法删除根目录文件的处理方法</title><link href="http://localhost:4000/2020/03/26/MacOS%E6%97%A0%E6%B3%95%E5%88%A0%E9%99%A4%E6%A0%B9%E7%9B%AE%E5%BD%95%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95.html" rel="alternate" type="text/html" title="Mac OS 10.15.3 无法删除根目录文件的处理方法" /><published>2020-03-26T00:00:00+08:00</published><updated>2020-03-26T00:00:00+08:00</updated><id>http://localhost:4000/2020/03/26/MacOS%E6%97%A0%E6%B3%95%E5%88%A0%E9%99%A4%E6%A0%B9%E7%9B%AE%E5%BD%95%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95</id><content type="html" xml:base="http://localhost:4000/2020/03/26/MacOS%E6%97%A0%E6%B3%95%E5%88%A0%E9%99%A4%E6%A0%B9%E7%9B%AE%E5%BD%95%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86%E6%96%B9%E6%B3%95.html">&lt;h3 id=&quot;mac-os-10153-无法删除根目录文件的处理方法&quot;&gt;Mac OS 10.15.3 无法删除根目录文件的处理方法&lt;/h3&gt;

&lt;h4 id=&quot;不能删除原因&quot;&gt;不能删除原因&lt;/h4&gt;
&lt;p&gt;主要原因是升级为Catalina系统后，很多文件或者应用写权限被锁，且有一个系统保护，SIP（system integrity protection）。&lt;/p&gt;

&lt;h4 id=&quot;解决方案&quot;&gt;解决方案&lt;/h4&gt;
&lt;p&gt;解决方法如下：&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;开启root账户，设定root账户密码，方法自行百度。&lt;/li&gt;
  &lt;li&gt;进入到急救模式，在“实用工具”中的“终端”中输入 命令：csrutil disable。此命令用于解除系统保护，SIP（system integrity protection）。&lt;/li&gt;
  &lt;li&gt;正常启动进入root账户，终端中输入命令：sudo mount -uw /。此命令用于解除全盘文件的写保护权限。&lt;/li&gt;
  &lt;li&gt;直接在终端通过命令：rm -rf ，此命令可以删除文件及文件夹。&lt;/li&gt;
  &lt;li&gt;重启后系统会自动恢复原来的保护状态，若不需要，可以再把root账户删掉。 &lt;/li&gt;
  &lt;li&gt;有个ppleinternal的文件夹，实在不知道干嘛的，还删不掉。可以终端输入sudo chflags hidden /AppleInternal来隐藏它。&lt;/li&gt;
&lt;/ol&gt;</content><author><name>盗亦有道</name></author><category term="黑果" /><category term="声卡" /><summary type="html">Mac OS 10.15.3 无法删除根目录文件的处理方法 不能删除原因 主要原因是升级为Catalina系统后，很多文件或者应用写权限被锁，且有一个系统保护，SIP（system integrity protection）。 解决方案 解决方法如下： 开启root账户，设定root账户密码，方法自行百度。 进入到急救模式，在“实用工具”中的“终端”中输入 命令：csrutil disable。此命令用于解除系统保护，SIP（system integrity protection）。 正常启动进入root账户，终端中输入命令：sudo mount -uw /。此命令用于解除全盘文件的写保护权限。 直接在终端通过命令：rm -rf ，此命令可以删除文件及文件夹。 重启后系统会自动恢复原来的保护状态，若不需要，可以再把root账户删掉。  有个ppleinternal的文件夹，实在不知道干嘛的，还删不掉。可以终端输入sudo chflags hidden /AppleInternal来隐藏它。</summary></entry><entry><title type="html">黑果升级系统至10.15.4导致声卡无法驱动</title><link href="http://localhost:4000/2020/03/26/%E5%8D%87%E7%BA%A7%E7%B3%BB%E7%BB%9F%E8%87%B310.15.4%E5%AF%BC%E8%87%B4%E5%A3%B0%E5%8D%A1%E6%97%A0%E6%B3%95%E9%A9%B1%E5%8A%A8.html" rel="alternate" type="text/html" title="黑果升级系统至10.15.4导致声卡无法驱动" /><published>2020-03-26T00:00:00+08:00</published><updated>2020-03-26T00:00:00+08:00</updated><id>http://localhost:4000/2020/03/26/%E5%8D%87%E7%BA%A7%E7%B3%BB%E7%BB%9F%E8%87%B310.15.4%E5%AF%BC%E8%87%B4%E5%A3%B0%E5%8D%A1%E6%97%A0%E6%B3%95%E9%A9%B1%E5%8A%A8</id><content type="html" xml:base="http://localhost:4000/2020/03/26/%E5%8D%87%E7%BA%A7%E7%B3%BB%E7%BB%9F%E8%87%B310.15.4%E5%AF%BC%E8%87%B4%E5%A3%B0%E5%8D%A1%E6%97%A0%E6%B3%95%E9%A9%B1%E5%8A%A8.html">&lt;h3 id=&quot;黑果升级系统至10154导致声卡无法驱动&quot;&gt;黑果升级系统至10.15.4导致声卡无法驱动&lt;/h3&gt;

&lt;h4 id=&quot;applealckext无法成功驱动&quot;&gt;AppleALc.kext无法成功驱动&lt;/h4&gt;
&lt;p&gt;尝试用AppleALc.kext驱动，试过所有layout id，均未能驱动。&lt;/p&gt;

&lt;h4 id=&quot;v00d00hda292无法成功驱动&quot;&gt;V00d00HDA2.9.2无法成功驱动&lt;/h4&gt;
&lt;p&gt;安装V00d00HDA2.9.2clover-V15，方式采用第三种方式，直接安装到系统，并屏蔽系统的自带驱动。&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Install ➤ VoodooHDA.kext, AppleHDADisabler.kext /System/Library/Extensions&lt;/li&gt;
  &lt;li&gt;Install ➤ VoodooHDA.prefPane /Library/PreferencePanes&lt;/li&gt;
  &lt;li&gt;Install ➤ getdump /usr/local/bin/getdump BackUp ➤ Origin /Desktop/AppleHDA.kext&lt;/li&gt;
&lt;/ul&gt;</content><author><name>盗亦有道</name></author><category term="黑果" /><category term="声卡" /><summary type="html">黑果升级系统至10.15.4导致声卡无法驱动 AppleALc.kext无法成功驱动 尝试用AppleALc.kext驱动，试过所有layout id，均未能驱动。 V00d00HDA2.9.2无法成功驱动 安装V00d00HDA2.9.2clover-V15，方式采用第三种方式，直接安装到系统，并屏蔽系统的自带驱动。 Install ➤ VoodooHDA.kext, AppleHDADisabler.kext /System/Library/Extensions Install ➤ VoodooHDA.prefPane /Library/PreferencePanes Install ➤ getdump /usr/local/bin/getdump BackUp ➤ Origin /Desktop/AppleHDA.kext</summary></entry><entry><title type="html">黑果的蓝牙解决方案</title><link href="http://localhost:4000/2020/03/26/%E9%BB%91%E6%9E%9C%E7%9A%84%E8%93%9D%E7%89%99%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html" rel="alternate" type="text/html" title="黑果的蓝牙解决方案" /><published>2020-03-26T00:00:00+08:00</published><updated>2020-03-26T00:00:00+08:00</updated><id>http://localhost:4000/2020/03/26/%E9%BB%91%E6%9E%9C%E7%9A%84%E8%93%9D%E7%89%99%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88</id><content type="html" xml:base="http://localhost:4000/2020/03/26/%E9%BB%91%E6%9E%9C%E7%9A%84%E8%93%9D%E7%89%99%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html">&lt;h3 id=&quot;驱动brcm-蓝牙的解决方案&quot;&gt;驱动BRCM 蓝牙的解决方案&lt;/h3&gt;

&lt;p&gt;（具体解决方案见https://github.com/acidanthera/BrcmPatchRAM，如下是搬运工）一般使用BrcmPatchRAM/2和BrcmFirmwareRepo/Data配合解决，依次按照如下顺序处理&lt;/p&gt;

&lt;h4 id=&quot;注入器根据自己系统版本选择安装&quot;&gt;注入器，（根据自己系统版本选择安装）&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;BrcmPatchRAM.kext: 10.10及更早版本，安装到 Library/Extensions&lt;/li&gt;
  &lt;li&gt;BrcmPatchRAM2.kext: 10.11及后续版本（10.15应该也可用），安装到 /System/Library/Extensions&lt;/li&gt;
  &lt;li&gt;BrcmPatchRAM3.kext：10.15 ，安装到 /System/Library/Extensions&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;注入器数据包如下两个只选一个安装不能同时&quot;&gt;注入器数据包（如下两个只选一个安装，不能同时）&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;BrcmFirmwareRepo.kext: 安装在 /System/Library/Extensions&lt;/li&gt;
  &lt;li&gt;或者BrcmFirmwareData.kext: 安装在 EFI/Clover/kexts（推荐方式）&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;特别针对1015版本需要在clover中加载brcmbluetoothinjectorkext&quot;&gt;特别针对10.15版本，需要在clover中加载BrcmBluetoothInjector.kext&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;因为10.15框架改变，需要配合clover中注入BrcmBluetoothInjector.kext使用（EFI/Clover/kexts）。&lt;/li&gt;
  &lt;li&gt;10.15之前的版本，不需要此步骤。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;因为我的系统是10153所以我使用的方法是&quot;&gt;因为我的系统是10.15.3，所以我使用的方法是：&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;用kextwizard软件把BrcmPatchRAM3.kext和BrcmFirmwareRepo.kext安装到/System/Library/Extensions&lt;/li&gt;
  &lt;li&gt;把BrcmBluetoothInjector.kext拷贝到引导磁盘的EFI/Clover/kexts/other文件夹中。&lt;/li&gt;
&lt;/ul&gt;

&lt;!--more--&gt;

&lt;hr /&gt;

&lt;p&gt;喜欢欢迎加我微信一起讨论。&lt;/p&gt;</content><author><name>盗亦有道</name></author><category term="黑果" /><summary type="html">驱动BRCM 蓝牙的解决方案 （具体解决方案见https://github.com/acidanthera/BrcmPatchRAM，如下是搬运工）一般使用BrcmPatchRAM/2和BrcmFirmwareRepo/Data配合解决，依次按照如下顺序处理 注入器，（根据自己系统版本选择安装） BrcmPatchRAM.kext: 10.10及更早版本，安装到 Library/Extensions BrcmPatchRAM2.kext: 10.11及后续版本（10.15应该也可用），安装到 /System/Library/Extensions BrcmPatchRAM3.kext：10.15 ，安装到 /System/Library/Extensions 注入器数据包（如下两个只选一个安装，不能同时） BrcmFirmwareRepo.kext: 安装在 /System/Library/Extensions 或者BrcmFirmwareData.kext: 安装在 EFI/Clover/kexts（推荐方式） 特别针对10.15版本，需要在clover中加载BrcmBluetoothInjector.kext 因为10.15框架改变，需要配合clover中注入BrcmBluetoothInjector.kext使用（EFI/Clover/kexts）。 10.15之前的版本，不需要此步骤。 因为我的系统是10.15.3，所以我使用的方法是： 用kextwizard软件把BrcmPatchRAM3.kext和BrcmFirmwareRepo.kext安装到/System/Library/Extensions 把BrcmBluetoothInjector.kext拷贝到引导磁盘的EFI/Clover/kexts/other文件夹中。</summary></entry><entry><title type="html">Welcome</title><link href="http://localhost:4000/2018/07/01/welcome.html" rel="alternate" type="text/html" title="Welcome" /><published>2018-07-01T00:00:00+08:00</published><updated>2018-07-01T00:00:00+08:00</updated><id>http://localhost:4000/2018/07/01/welcome</id><content type="html" xml:base="http://localhost:4000/2018/07/01/welcome.html">&lt;p&gt;If you see this page, that means you have setup your site. enjoy! :ghost: :ghost: :ghost:&lt;/p&gt;

&lt;p&gt;You may want to &lt;a href=&quot;https://tianqi.name/jekyll-TeXt-theme/docs/en/configuration&quot;&gt;config the site&lt;/a&gt; or &lt;a href=&quot;https://tianqi.name/jekyll-TeXt-theme/docs/en/writing-posts&quot;&gt;writing a post&lt;/a&gt; next. Please feel free to &lt;a href=&quot;https://github.com/kitian616/jekyll-TeXt-theme/issues&quot;&gt;create an issue&lt;/a&gt; or &lt;a href=&quot;mailto:kitian616@outlook.com&quot;&gt;send me email&lt;/a&gt; if you have any questions.&lt;/p&gt;

&lt;!--more--&gt;

&lt;hr /&gt;

&lt;p&gt;If you like TeXt, don’t forget to give me a star. :star2:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/kitian616/jekyll-TeXt-theme/&quot;&gt;&lt;img src=&quot;https://img.shields.io/github/stars/kitian616/jekyll-TeXt-theme.svg?label=Stars&amp;amp;style=social&quot; alt=&quot;Star This Project&quot; /&gt;&lt;/a&gt;&lt;/p&gt;</content><author><name>盗亦有道</name></author><category term="TeXt" /><summary type="html">If you see this page, that means you have setup your site. enjoy! :ghost: :ghost: :ghost: You may want to config the site or writing a post next. Please feel free to create an issue or send me email if you have any questions.</summary></entry><entry><title type="html">Post with Header Image</title><link href="http://localhost:4000/2018/06/01/header-image.html" rel="alternate" type="text/html" title="Post with Header Image" /><published>2018-06-01T00:00:00+08:00</published><updated>2018-06-01T00:00:00+08:00</updated><id>http://localhost:4000/2018/06/01/header-image</id><content type="html" xml:base="http://localhost:4000/2018/06/01/header-image.html">&lt;p&gt;A Post with Header Image, See &lt;a href=&quot;https://tianqi.name/jekyll-TeXt-theme/samples.html#page-layout&quot;&gt;Page layout&lt;/a&gt; for more examples.&lt;/p&gt;

&lt;!--more--&gt;

&lt;hr /&gt;

&lt;p&gt;测试显示什么内容。&lt;/p&gt;</content><author><name>盗亦有道</name></author><category term="TeXt" /><summary type="html">A Post with Header Image, See Page layout for more examples.</summary></entry></feed>